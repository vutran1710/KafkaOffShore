version: '3.6'

services:
  couchdb:
    image: couchdb:latest
    environment:
      COUCHDB_USER: "admin"
      COUCHDB_PASSWORD: "1234abc"
    ports:
      - 5984:5984
    volumes:
      - ./.persist/couchdb:/opt/couchdb/data

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: kos_zookeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:2.5.0
    depends_on:
      - zookeeper
    ports:
      - 9092-9093:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  cmak:
    image: hlebalbau/kafka-manager:stable
    container_name: kos_cmak
    depends_on:
      - zookeeper
    ports:
      - 9000:9000
    environment:
      - ZK_HOSTS=zookeeper:2181
      - APPLICATION_SECRET=random-secret
    command: -Dpidfile.path=/dev/null

  kafka-producer:
    image: kafka-fastapi-producer
    container_name: kos_backend-produer
    build:
      dockerfile: Dockerfile
      context: ./producer
    depends_on:
      - kafka
    environment:
      - KAFKA_SERVER=kafka:9092
      - ZOOKEEPER_SERVER=zookeeper:2181
      - KAFKA_TOPIC=flight
      - LOG_LEVEL=10
      - STAGE=PRODUCTION
    ports:
      - 8000:8000

  kafka-consumer:
    image: kafka-flink-consumer
    container_name: kos_backend-consumer
    build:
      dockerfile: Dockerfile
      context: ./consumer
    depends_on:
      - kafka-producer
    environment:
      - KAFKA_SERVER=kafka:9092
      - ZOOKEEPER_SERVER=zookeeper:2181
      - KAFKA_TOPIC=flight
      - COUCHDB_SERVER=couchdb:5984

  # zeppelin:
  #   image: apache/zeppelin:0.9.0
  #   container_name: kos_zeppelin
  #   ports:
  #     - 8079:8080
  #   environment:
  #     ZEPPELIN_LOG_DIR: /logs
  #     ZEPPELIN_NOTEBOOK_DIR: /notebook
  #   volumes:
  #     - ./.tmp/logs:/logs
  #     - ./.data/kafka-poc/zeppelin/notebook:/notebook
  #     - ./.data/kafka-poc/zeppelin/conf:/zeppelin/conf
  #     - ./.data/kafka-poc/kafka-data:/data/kafka-poc/kafka-data

  spark-master:
    image: bitnami/spark:3
    container_name: kos_spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_LOCAL_IP=spark-master
    ports:
      - 8080:8080
      - 7077:7077

  spark-worker:
    image: bitnami/spark:3
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_LOCAL_IP=spark-worker
    ports:
      - 8081-8082:8081
    volumes:
      - ./.mnt/spark-apps:/opt/spark-apps
      - ./.mnt/spark-data:/opt/spark-data

  # sparkala:
  #   image: sparkala
  #   container_name: kos_sparkala
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./sparkala
  #   environment:
  #     - SPARK_URL=spark://spark-master:7077
  #     - ZOOKEEPER_URL=zookeeper:2181
  #   depends_on:
  #     - zookeeper
  #     - spark-master
  #     - kafka
